// <auto-generated />
using System;
using CosmosOdyssey.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CosmosOdyssey.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CompanyRouteReservation", b =>
                {
                    b.Property<Guid>("CompanyRoutesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ReservationsId")
                        .HasColumnType("char(36)");

                    b.HasKey("CompanyRoutesId", "ReservationsId");

                    b.HasIndex("ReservationsId");

                    b.ToTable("CompanyRouteReservation");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.ApiLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExternalPriceList")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ApiLogs");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.CompanyRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("TravelEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("TravelPriceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("TravelStart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RouteId");

                    b.HasIndex("TravelPriceId");

                    b.ToTable("CompanyRoutes");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Destination", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(1020)
                        .HasColumnType("varchar(1020)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double");

                    b.Property<int>("TotalTravelMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Distance")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FromDestinationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ToDestinationId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ToDestinationId");

                    b.HasIndex("FromDestinationId", "ToDestinationId")
                        .IsUnique();

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.TravelPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TravelPrices");
                });

            modelBuilder.Entity("CompanyRouteReservation", b =>
                {
                    b.HasOne("CosmosOdyssey.Models.CompanyRoute", null)
                        .WithMany()
                        .HasForeignKey("CompanyRoutesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmosOdyssey.Models.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CosmosOdyssey.Models.CompanyRoute", b =>
                {
                    b.HasOne("CosmosOdyssey.Models.Company", "Company")
                        .WithMany("CompanyRoutes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmosOdyssey.Models.Route", "Route")
                        .WithMany("CompanyRoutes")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmosOdyssey.Models.TravelPrice", "TravelPrice")
                        .WithMany("CompanyRoutes")
                        .HasForeignKey("TravelPriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Route");

                    b.Navigation("TravelPrice");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Route", b =>
                {
                    b.HasOne("CosmosOdyssey.Models.Destination", "FromDestination")
                        .WithMany("RoutesFromHere")
                        .HasForeignKey("FromDestinationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CosmosOdyssey.Models.Destination", "ToDestination")
                        .WithMany("RoutesToHere")
                        .HasForeignKey("ToDestinationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromDestination");

                    b.Navigation("ToDestination");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Company", b =>
                {
                    b.Navigation("CompanyRoutes");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Destination", b =>
                {
                    b.Navigation("RoutesFromHere");

                    b.Navigation("RoutesToHere");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.Route", b =>
                {
                    b.Navigation("CompanyRoutes");
                });

            modelBuilder.Entity("CosmosOdyssey.Models.TravelPrice", b =>
                {
                    b.Navigation("CompanyRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
